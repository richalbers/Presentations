------------------------------------------
The Shell and File System
	At the end of this presentation you should be able to
		Explain what the shell is
		Explain how the file system is organized
		Navigate the file system with the cd command
		Explain what absolute and relative paths are and use them appropriately with commands
		
-------------------------------------------
The Shell
	The shell is the interface between the user and the operating system
		A command line shell takes keyboard commands from the user and passes them to the operating system to carry then out
	There are several command line shells available
		sh - original Bourne shell
		ksh - Korn Shell
		bash - Bourne Again Shell
		zsh - shell used on Macs
	Each of these is an improvement upon the previous one, but they all do the same basic job

---------------------------------------------
File System
	File System
		The file system is organized in a hierarchical directory structure
		The top of the tree is root (/)
			All other directories are located in root, or a subdirectory below root
				[[simple diagram!https://www.oreilly.com/openbook/debian/book/figs/deb.0403.gif]]
		There are no drive letters (which windows uses), instead different devices are "mounted" at different points in the directory tree   
	Commonly referred to directory terms
		current working directory - the directory you're currently in
		home directory - Where a user's files are located.  
			When logging in, the current working directory is your home directory.
			This is typically the only place (other than /tmp) a user can create and modify files
----------------------------------------------	
Navigation commands
	Commonly used navigation commands
		pwd- shows (prints) your current working directory	
		[[code]]
			pwd
		cd - changes to a new directory
		[[code]]
			cd /bin 
			cd /home/ralbers 
	Special directory "shorthand" names
		. refers to current directory
		.. refers to the parent of current direcory
		~  refers to your home directory
		~someUserName refers to someUserName's home direcory
		[[code]]
			cd ..
			cd ~
			cd ~ralbers
--------------------------------------------------
Absolute vs relative paths
	Any command that wants a directory or file name, can take an absolute or relative path to that directory or file
	Absolute paths are the complete path starting from root
		They always start with /
		Examples
		[[code]]
			cd /bin
			cd /home/ralbers
			cd /usr
	Relative paths are relative to the current working directory
		They do not start with /
		Examples
		[[code]]
			cd bin
			cd ..
--------------------------------------------------
Practice
	Given [[this file system!https://www.oreilly.com/openbook/debian/book/figs/deb.0403.gif]]
	If /home/bill is your present working directory, how could you
		cd to /home/bill/books using an absolute path
		cd to /home/bill/books using a relative path
	If /home/bill is your present working directory, how could you
		cd to /bin using an absolute path
		cd to /bin using a relative path
---------------------------------------------------
Commands
	All linux commands have the following format
		command -options arguments
			options alter the way the command works
			arguments are what the command operates on
	details about each command can be found with the help or man command, or --help option
	[[code]]
		help cd
		man ls
		ls --help
---------------------------------------------------
ls command
	ls - lists direcory contents
	[[code]]
		ls
		ls /bin
		ls -a
		ls -l
	ls -a shows all files, including those that are hidden
		a filename that begins with a . makes the file hidden
	ls -l produces a long listing, showing details about each file listed
		file type - first character
		file permissions (9 characters for for owner, group, and other)
		ownership info (user and group)
		file size
		last modified date and time
		filename

---------------------------------------------------
